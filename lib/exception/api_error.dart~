import 'package:dio/dio.dart';

class ApiError implements Exception {
  final String errMessage;

  // Named constructor that takes a DioException and returns an ApiError instance
  ApiError._(this.errMessage);

  factory ApiError.errorCheck(DioException error) {
    String message = "An unexpected error occurred";

    switch (error.type) {
      case DioExceptionType.connectionTimeout:
        message = 'Connection timeout!';
        break;
      case DioExceptionType.sendTimeout:
        message = 'Send timeout!';
        break;
      case DioExceptionType.receiveTimeout:
        message = 'Receive timeout!';
        break;
      case DioExceptionType.badCertificate:
        message = 'Bad certificate!';
        break;

      case DioExceptionType.badResponse:
        switch (error.response?.statusCode) {
          case 404:
            message = 'Page not found!';
            break;
          case 413:
            message = 'File size is too large!';
            break;
          case 400:
            message = '${error.response?.data}';
            break;
          case 401:
            message = 'You are not authorized!';
            break;
          case 405:
            message = 'Method not allowed!';
            break;
          case 500:
            message = 'Server error!';
            break;
          default:
            message = 'Bad response from server!';
        }
        break;

      case DioExceptionType.cancel:
        message = 'Request was canceled!';
        break;
      case DioExceptionType.connectionError:
        message = 'Please check your connection!';
        break;
      case DioExceptionType.unknown:
        message = 'An unknown error occurred!';
        break;
    }

    return ApiError._(message); // Return the ApiError with the message
  }

  @override
  String toString() => errMessage;
}
